#include <stdio.h>
#include <stdlib.h>
#define T 8 
int turno = 0;
char tablero[T][T];
//////////////////////////////////////////////////////MENU/////////////////////////////////////////////////////////////
int main(){
	int menu,aux=0;
  while(aux!=1)
  {
      printf("\n\n\n\t**************BIENVENIDO AL JUEGO DE LAS DAMAS EN C************\n\t*****  *****\t********  ****     **\t***    ***\n\t***  **  ***\t***       ** **    **\t***    ***\n\t***  **  ***\t******    **  **   **\t***    ***\n\t***      ***\t***       **    ** **\t**********\n\t***      ***\t********  **     ****\t**********\n\tpara leer el manual presione [1]\n\tpara comenzar a jugar presione [2]\n\tpara salir presione [0]\n");
      scanf("%d",&menu);
 
      if(menu==2)
      {
	system("clear");
	llenarTablero();
	while(jugar());
	aux=1;
      }
	else if(menu==0)
      {
	
	printf("\t\t******ADIOS******\n\tGRACIAS POR PREFERIR DAMAS EN C\n\n");
	aux=1;
	system("clear");
	return 0;
      }
	else if(menu==1)
      {
	manual();
	aux=0;
      }	
	else if(menu!=1&&menu!=2&&menu!=0)
	aux=0;
  }
	return 0;
}
/////////////////////////////////////////rellena el tablero despues de un movimiento////////////////////////////////////////
int llenarTablero()
{
  int i,j,k;
	for(i=0;i<T;i++)
	    for(j=0;j<T;j++)
		{
			if(i<3&&((i+j)%2==0))
				tablero[i][j]='n';
			else
				if((i>4)&&((i+j)%2==0))
					tablero[i][j]='b';
				else
					tablero[i][j]= ' ' ;
		}
}
///////////////////////////////////////pausa para continuar///////////////////////////////////////////////////////////
void pausar()
{
	printf("\nPresione 'c' para continuar...");
	while(getchar()!='c');
}
////////////////////////////////imprime tablero///////////////////////////////////////////////////////////////////////////
int imprimirTablero()
{
  int k,j,i;
	system("clear");
	for(i=0;i<T;i++)
    	{
		if (i==0)
		{
			printf("  ");
			for(k=0;k<T;k++)
				printf(" %d ",k);
			printf("\n");
		}

		printf("%d ",i);
        	for(j=0;j<T;j++)
	  {
		
                	printf(" %c ",tablero[i][j]);
          	}
          	printf("\n");
    	}
}
/////////////////////////////validacion movimiento de pieza/////////////////////////////////////////////////////////////////
int moverPieza(int x, int y, int direccion)
{
	if(turno==1)
	{
		if(tablero[x][y]!='n')
		{
			printf("No existe pieza negra en la posicion %d %d \n", x, y);
		;
		}
		else 
		{
			printf("Direccion %d \n", direccion);
			if(direccion==1&&(y-1)>=0&&(x+1)<8)
			{
				if(tablero[x+1][y-1]==' ')
				{
					tablero[x][y] =' ';
					tablero[x+1][y-1]= 'n';
				}
				else
					if(tablero[x+1][y-1]=='b'&&tablero[x+2][y-2]==' ')
					{
						tablero[x][y] = ' ';
						tablero[x+1][y-1]= ' ';
						tablero[x+2][y-2]= 'n';
						printf("La pieza negra se comio la pieza Blanca en %d %d \n", x + 1, y - 1);
					}
					else
						printf("La pieza no puede moverse a una casilla ocupada");
			}
			else
			{
				if(direccion==1)
					printf("La pieza no puede moverse pues sale del tablero");
				  
			}
			
			if(direccion==2&&(y+1)<8&&(x+1)<8)
			{
				if(tablero[x+1][y+1]==' ')
				{
					tablero[x][y]=' ';
					tablero[x+1][y+1]= 'n';
				}
				else
					if(tablero[x+1][y+1]=='b'&&tablero[x+2][y+2]==' ')
					{
						tablero[x][y] = ' ';
						tablero[x+1][y+1]=' ';
						tablero[x+2][y+2]='n';
						printf("La pieza negra se comio la pieza Blanca en %d %d \n", x + 1, y + 1);
					}
					else
						printf("La pieza no puede moverse a una casilla ocupada");
				  
			}
			else
			{
				if(direccion==2)
					printf("La pieza no puede moverse pues sale del tablero");
			      
			}
		}
		turno=0;
	}
	else 
	    if(turno==0)
	{
		if(tablero[x][y]!='b')
		{
			printf("No existe pieza Blanca en la posicion %d %d \n", x, y);
			   
		}
		else 
		{
			if(direccion==1&&(y-1)>=0&&(x-1)>=0)
			{
				if(tablero[x-1][y-1]==' ')
				{
					tablero[x][y]=' ';
					tablero[x-1][y-1]='b';
				}
				else
					if(tablero[x-1][y-1]=='n'&&tablero[x-2][y-2]==' ')
					{
						tablero[x][y]=' ';
						tablero[x-1][y-1]=' ';
						tablero[x-2][y-2]='b';
						printf("La pieza Blanca se comio la pieza negra en %d %d \n", x - 1, y - 1);
					}
					else
						printf("La pieza no puede moverse a una casilla ocupada");
					  
			}
			else
			{
				if(direccion==1)
					printf("La pieza no puede moverse pues sale del tablero");
					  
			}
			
			if(direccion==2&&(y+1)<8&&(x-1)>=0)
			{
				if(tablero[x-1][y+1]==' ')
				{
					tablero[x][y] = ' ';
					tablero[x-1][y+1]='b';
				}
				else
					if(tablero[x-1][y+1]=='n'&&tablero[x-2][y+2]==' ')
					{
						tablero[x][y] = ' ';
						tablero[x-1][y+1]=' ';
						tablero[x-2][y+2]='b';
						printf("La pieza Blanca se comio la pieza negra en %d %d \n", x + 1, y + 1);
					}
					else
						printf("La pieza no puede moverse a una casilla ocupada");
			}
			else
			{
				if(direccion==2)
					printf("La pieza no puede moverse pues sale del tablero");
					  
			}
		}
	      turno=1;
	 }
		pausar();
}
//////////////////////////////////////////eleccion fila columna ficha blanca y negra///////////////////////////////////////
int jugar()
{
	int x, y, direccion;
	imprimirTablero();
	if(turno==1)
	{
		printf("Seleccione la ficha negra que desea mover...\n");
		  
	}
	else if(turno==0)
	{
		printf("Seleccione la ficha Blanca que desea mover...\n");
		  
	}
	
	printf("\tIntroduzca la fila y columna\n");
	scanf("%d %d",&x,&y);
	printf("\tElija la direccion del movimiento,\n\tIzquierda [1]\n\tDerecha [2]\n");
	scanf("%d",&direccion);
	moverPieza(x, y, direccion);
	return 1;
	
}
/////////////////////////////////////manual usuario////////////////////////////////////////////////////////////////////
int manual()
{
    printf("\tEN ESTE JUEGO PARTE EL JUGADOR CON LAS PIEZAS BLANCAS\n\teL tablero esta enumerado del 0 al 7,desde arriba hacia abajo y de izquierda a derecha\n\tlas negras estan arriba y las blancas abajo\n\tluego de cada movimiento para continuar debe presionar [c]\n\tlas coordenadas de la ficha que desea mover debera ser ingresada con un espacio entre cada numero\n");  
}
